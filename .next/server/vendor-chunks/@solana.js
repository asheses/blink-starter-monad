"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solana";
exports.ids = ["vendor-chunks/@solana"];
exports.modules = {

/***/ "(rsc)/./node_modules/@solana/actions/lib/esm/constants.js":
/*!***********************************************************!*\
  !*** ./node_modules/@solana/actions/lib/esm/constants.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTIONS_CORS_HEADERS: () => (/* binding */ ACTIONS_CORS_HEADERS),\n/* harmony export */   ACTIONS_CORS_HEADERS_MIDDLEWARE: () => (/* binding */ ACTIONS_CORS_HEADERS_MIDDLEWARE),\n/* harmony export */   BLINKS_QUERY_PARAM: () => (/* binding */ BLINKS_QUERY_PARAM),\n/* harmony export */   BLOCKCHAIN_IDS: () => (/* binding */ BLOCKCHAIN_IDS),\n/* harmony export */   HTTPS_PROTOCOL: () => (/* binding */ HTTPS_PROTOCOL),\n/* harmony export */   MEMO_PROGRAM_ID: () => (/* binding */ MEMO_PROGRAM_ID)\n/* harmony export */ });\n/** @internal */\nconst HTTPS_PROTOCOL = \"https:\";\n/** Program Id for the SPL Memo program */\nconst MEMO_PROGRAM_ID = \"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\";\n/**\n * Specification declared URL query parameter to detect blinks via interstitial website URLs.\n *\n * Note: The `action` query parameter should begin with the `solana-action:` protocol identifier\n *\n * Example: `https://dial.to/?action=solana-action:https://jupiter.dial.to/swap/SOL-Bonk`\n */\nconst BLINKS_QUERY_PARAM = \"action\";\n/**\n * Blockchain IDs for Solana from CAIP\n *\n * @see https://namespaces.chainagnostic.org/solana/caip10\n */\nconst BLOCKCHAIN_IDS = {\n    mainnet: \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n    devnet: \"solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\",\n    testnet: \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n};\n/**\n * Standard headers for use within frameworks that use the native `HeadersInit` (like NextJS)\n *\n * Note: `Access-Control-Allow-Origin=*` should ONLY be set on your Actions API routes and `actions.json`.\n * Setting \"allow origin to any\" on other routes on your server is bad practice and should be avoided.\n */\nconst ACTIONS_CORS_HEADERS = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, Content-Encoding, Accept-Encoding, X-Accept-Action-Version, X-Accept-Blockchain-Ids\",\n    \"Access-Control-Expose-Headers\": \"X-Action-Version, X-Blockchain-Ids\",\n    \"Content-Type\": \"application/json\",\n};\n/**\n * Standard headers for use within frameworks that use middleware to handle CORS headers\n * (like Hono, Express, and Fastify)\n *\n * Note: `origin=*` should ONLY be set on your Actions API routes and `actions.json`.\n * Setting \"allow origin to any\" on other routes on your server is bad practice and should be avoided.\n */\nconst ACTIONS_CORS_HEADERS_MIDDLEWARE = {\n    origin: \"*\",\n    methods: [\"GET\", \"POST\", \"PUT\", \"OPTIONS\"],\n    allowedHeaders: [\n        \"Content-Type\",\n        \"Authorization\",\n        \"Content-Encoding\",\n        \"Accept-Encoding\",\n        \"X-Accept-Action-Version\",\n        \"X-Accept-Blockchain-Ids\",\n    ],\n    exposedHeaders: [\n        \"X-Action-Version\",\n        \"X-Blockchain-Ids\",\n    ],\n};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9hY3Rpb25zL2xpYi9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibGluay1zdGFydGVyLW1vbmFkLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvYWN0aW9ucy9saWIvZXNtL2NvbnN0YW50cy5qcz9hZWY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjb25zdCBIVFRQU19QUk9UT0NPTCA9IFwiaHR0cHM6XCI7XG4vKiogUHJvZ3JhbSBJZCBmb3IgdGhlIFNQTCBNZW1vIHByb2dyYW0gKi9cbmV4cG9ydCBjb25zdCBNRU1PX1BST0dSQU1fSUQgPSBcIk1lbW9TcTRncUFCQVhLYjk2cW5IOFR5c05jV3hNeVdDcVhnRExHbWZjSHJcIjtcbi8qKlxuICogU3BlY2lmaWNhdGlvbiBkZWNsYXJlZCBVUkwgcXVlcnkgcGFyYW1ldGVyIHRvIGRldGVjdCBibGlua3MgdmlhIGludGVyc3RpdGlhbCB3ZWJzaXRlIFVSTHMuXG4gKlxuICogTm90ZTogVGhlIGBhY3Rpb25gIHF1ZXJ5IHBhcmFtZXRlciBzaG91bGQgYmVnaW4gd2l0aCB0aGUgYHNvbGFuYS1hY3Rpb246YCBwcm90b2NvbCBpZGVudGlmaWVyXG4gKlxuICogRXhhbXBsZTogYGh0dHBzOi8vZGlhbC50by8/YWN0aW9uPXNvbGFuYS1hY3Rpb246aHR0cHM6Ly9qdXBpdGVyLmRpYWwudG8vc3dhcC9TT0wtQm9ua2BcbiAqL1xuZXhwb3J0IGNvbnN0IEJMSU5LU19RVUVSWV9QQVJBTSA9IFwiYWN0aW9uXCI7XG4vKipcbiAqIEJsb2NrY2hhaW4gSURzIGZvciBTb2xhbmEgZnJvbSBDQUlQXG4gKlxuICogQHNlZSBodHRwczovL25hbWVzcGFjZXMuY2hhaW5hZ25vc3RpYy5vcmcvc29sYW5hL2NhaXAxMFxuICovXG5leHBvcnQgY29uc3QgQkxPQ0tDSEFJTl9JRFMgPSB7XG4gICAgbWFpbm5ldDogXCJzb2xhbmE6NWV5a3Q0VXNGdjhQOE5KZFRSRXBZMXZ6cUtxWkt2ZHBcIixcbiAgICBkZXZuZXQ6IFwic29sYW5hOkV0V1RSQUJaYVlxNmlNZmVZS291UnUxNjZWVTJ4cWExXCIsXG4gICAgdGVzdG5ldDogXCJzb2xhbmE6NHVoY1ZKeVU5cEprdlF5Uzg4dVJEaXN3SFhTQ2tZM3pcIixcbn07XG4vKipcbiAqIFN0YW5kYXJkIGhlYWRlcnMgZm9yIHVzZSB3aXRoaW4gZnJhbWV3b3JrcyB0aGF0IHVzZSB0aGUgbmF0aXZlIGBIZWFkZXJzSW5pdGAgKGxpa2UgTmV4dEpTKVxuICpcbiAqIE5vdGU6IGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW49KmAgc2hvdWxkIE9OTFkgYmUgc2V0IG9uIHlvdXIgQWN0aW9ucyBBUEkgcm91dGVzIGFuZCBgYWN0aW9ucy5qc29uYC5cbiAqIFNldHRpbmcgXCJhbGxvdyBvcmlnaW4gdG8gYW55XCIgb24gb3RoZXIgcm91dGVzIG9uIHlvdXIgc2VydmVyIGlzIGJhZCBwcmFjdGljZSBhbmQgc2hvdWxkIGJlIGF2b2lkZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBBQ1RJT05TX0NPUlNfSEVBREVSUyA9IHtcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiOiBcIipcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIjogXCJHRVQsUE9TVCxQVVQsT1BUSU9OU1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiOiBcIkNvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgQ29udGVudC1FbmNvZGluZywgQWNjZXB0LUVuY29kaW5nLCBYLUFjY2VwdC1BY3Rpb24tVmVyc2lvbiwgWC1BY2NlcHQtQmxvY2tjaGFpbi1JZHNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUV4cG9zZS1IZWFkZXJzXCI6IFwiWC1BY3Rpb24tVmVyc2lvbiwgWC1CbG9ja2NoYWluLUlkc1wiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxufTtcbi8qKlxuICogU3RhbmRhcmQgaGVhZGVycyBmb3IgdXNlIHdpdGhpbiBmcmFtZXdvcmtzIHRoYXQgdXNlIG1pZGRsZXdhcmUgdG8gaGFuZGxlIENPUlMgaGVhZGVyc1xuICogKGxpa2UgSG9ubywgRXhwcmVzcywgYW5kIEZhc3RpZnkpXG4gKlxuICogTm90ZTogYG9yaWdpbj0qYCBzaG91bGQgT05MWSBiZSBzZXQgb24geW91ciBBY3Rpb25zIEFQSSByb3V0ZXMgYW5kIGBhY3Rpb25zLmpzb25gLlxuICogU2V0dGluZyBcImFsbG93IG9yaWdpbiB0byBhbnlcIiBvbiBvdGhlciByb3V0ZXMgb24geW91ciBzZXJ2ZXIgaXMgYmFkIHByYWN0aWNlIGFuZCBzaG91bGQgYmUgYXZvaWRlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IEFDVElPTlNfQ09SU19IRUFERVJTX01JRERMRVdBUkUgPSB7XG4gICAgb3JpZ2luOiBcIipcIixcbiAgICBtZXRob2RzOiBbXCJHRVRcIiwgXCJQT1NUXCIsIFwiUFVUXCIsIFwiT1BUSU9OU1wiXSxcbiAgICBhbGxvd2VkSGVhZGVyczogW1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiLFxuICAgICAgICBcIkF1dGhvcml6YXRpb25cIixcbiAgICAgICAgXCJDb250ZW50LUVuY29kaW5nXCIsXG4gICAgICAgIFwiQWNjZXB0LUVuY29kaW5nXCIsXG4gICAgICAgIFwiWC1BY2NlcHQtQWN0aW9uLVZlcnNpb25cIixcbiAgICAgICAgXCJYLUFjY2VwdC1CbG9ja2NoYWluLUlkc1wiLFxuICAgIF0sXG4gICAgZXhwb3NlZEhlYWRlcnM6IFtcbiAgICAgICAgXCJYLUFjdGlvbi1WZXJzaW9uXCIsXG4gICAgICAgIFwiWC1CbG9ja2NoYWluLUlkc1wiLFxuICAgIF0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@solana/actions/lib/esm/constants.js\n");

/***/ })

};
;